"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Copyright 2018 - 2019 Ayana Developers <devs@ayana.io>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const constants_1 = require("../constants");
/**
 * @ignore
 */
var V1LogLevel;
(function (V1LogLevel) {
    V1LogLevel["OFF"] = "OFF";
    V1LogLevel["ERROR"] = "ERROR";
    V1LogLevel["WARN"] = "WARN";
    V1LogLevel["INFO"] = "INFO";
    V1LogLevel["DEBUG"] = "DEBUG";
    V1LogLevel["TRACE"] = "TRACE";
})(V1LogLevel || (V1LogLevel = {}));
class V1 {
    static setConfig(config) {
        global.AYANA_LOGGER_CONFIG = {
            level: V1.remapLevel(config.level),
            loggers: V1.remapLoggers(config.loggers),
        };
    }
    static remapLoggers(loggers) {
        const v1Loggers = [];
        if (Array.isArray(loggers)) {
            for (const logger of loggers) {
                v1Loggers.push({
                    level: V1.remapLevel(logger.level),
                    name: logger.name,
                    exact: logger.exact,
                });
            }
        }
        return v1Loggers;
    }
    static remapLevel(level) {
        switch (level) {
            case constants_1.LogLevel.OFF: return V1LogLevel.OFF;
            case constants_1.LogLevel.ERROR: return V1LogLevel.ERROR;
            case constants_1.LogLevel.WARN: return V1LogLevel.WARN;
            case constants_1.LogLevel.DEBUG: return V1LogLevel.DEBUG;
            case constants_1.LogLevel.TRACE: return V1LogLevel.TRACE;
            default: return V1LogLevel.INFO;
        }
    }
}
exports.V1 = V1;
//# sourceMappingURL=V1.js.map