import { LogMeta } from '../LogMeta';
import { Transport, TransportOptions } from './Transport';
/**
 * @ignore
 */
export interface HTTPBufferMessage {
    meta: LogMeta;
    message: string;
}
/**
 * @ignore
 */
export interface HTTPTransportOptions extends TransportOptions {
    endpoint: string;
    flushInterval?: number;
    onFlushError?: (code: number, reason?: string) => void;
}
/**
 * TODO: Unignore later
 *
 * @ignore
 */
export declare class HTTPTransport extends Transport<HTTPTransportOptions> {
    private readonly buffer;
    private readonly lastFlush;
    constructor(options: HTTPTransportOptions);
    prepareRequest(messages: Array<HTTPBufferMessage>): {
        body: {
            messages: HTTPBufferMessage[];
        };
    };
    print(meta: LogMeta, message: string): void;
    private flush;
}
