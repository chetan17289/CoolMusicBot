{"version":3,"sources":["Node.ts"],"names":[],"mappings":";;AAAA,uCAAgE;AAChE,iCAAkC;AAElC,6CAAsC;AAWtC,MAAqB,aAAc,SAAQ,kBAAI;IAI7C,YAAY,IAAa;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK;YAAE,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;QAExG,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,MAAM,GAAG,IAAI,oBAAU,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QACvH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QAE7C,KAAK,MAAM,IAAI,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,EAAE;YAC5C,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE;gBAClB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CACF;AAjBD,gCAiBC","file":"Node.js","sourcesContent":["import Node, { ConnectionOptions, NodeOptions } from 'lavalink';\nimport Redis = require('ioredis');\nimport Queue from './Queue';\nimport QueueStore from './QueueStore';\n\nexport interface Options extends NodeOptions {\n  hosts?: {\n    ws?: string | { url: string, options: ConnectionOptions };\n    rest?: string;\n    redis?: Redis.Redis | Redis.RedisOptions;\n  },\n  advanceBy?: (queue: Queue, info: { previous: string, remaining: number }) => number;\n}\n\nexport default class LavaqueueNode extends Node {\n  public readonly queues: QueueStore;\n  public advanceBy: (queue: Queue, info: { previous: string, remaining: number }) => number;\n\n  constructor(opts: Options) {\n    if (!opts.hosts || !opts.hosts.redis) throw new Error('cannot make a queue without a Redis connection');\n\n    super(opts);\n    this.queues = new QueueStore(this, opts.hosts.redis instanceof Redis ? opts.hosts.redis : new Redis(opts.hosts.redis));\n    this.advanceBy = opts.advanceBy || (() => 1);\n\n    for (const name of ['event', 'playerUpdate']) {\n      this.on(name, (d) => {\n        this.queues.get(d.guildId).emit(name, d);\n      });\n    }\n  }\n}\n"],"sourceRoot":"../src"}